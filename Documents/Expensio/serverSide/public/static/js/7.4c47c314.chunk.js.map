{"version":3,"sources":["Authentication/AuthComponents/loginForm.js"],"names":["LoginForm","emailRef","useRef","passwordRef","login","useContext","AuthContext","_useState","useState","_useState2","_slicedToArray","error","setError","_useState3","_useState4","loading","setLoading","navigate","useNavigate","_handleSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","wrap","_context","prev","next","preventDefault","current","value","sent","ok","Error","t0","replace","stop","apply","arguments","_jsx","children","_jsxs","Card","style","display","justifyContent","alignItems","height","marginTop","padding","Body","className","Alert","variant","Form","onSubmit","_x","Group","id","Label","Control","type","ref","required","Button","disabled","Link","to","marginBottom"],"mappings":"wQAKe,SAASA,IACtB,IAAMC,EAAWC,mBACXC,EAAcD,mBACZE,EAAUC,qBAAWC,KAArBF,MACRG,EAA0BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,EAA8BL,oBAAS,GAAMM,EAAAJ,YAAAG,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GACpBG,EAAWC,cAEU,SAAAC,IAoB1B,OApB0BA,EAAAC,YAAAC,cAAAC,MAA3B,SAAAC,EAA4BC,GAAC,OAAAH,cAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAKR,OAJnBJ,EAAEK,iBAAiBH,EAAAC,KAAA,EAGjBf,EAAS,IACTI,GAAW,GAAMU,EAAAE,KAAA,EAEIxB,EACnBH,EAAS6B,QAAQC,MACjB5B,EAAY2B,QAAQC,OACpB,KAAD,EAHW,GAAAL,EAAAM,KAKEC,GAAG,CAADP,EAAAE,KAAA,cAAQ,IAAIM,MAAM,aAAa,KAAD,EAC9ClB,GAAW,GACXU,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAS,GAAAT,EAAA,SAEAd,EAAS,oBAAoB,QAG/BK,EAAS,IAAK,CAAEmB,QAAS,SAAU,yBAAAV,EAAAW,OAAA,GAAAd,EAAA,oBACpCe,MAAA,KAAAC,UAAA,CAED,OACEC,cAAA,OAAAC,SACEC,eAACC,IAAI,CACHC,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,OAAQ,SACRP,SAAA,CAEFD,cAAA,MAAII,MAAO,CAAEK,UAAW,IAAKC,QAAS,IAAKT,SAAC,wBAC5CC,eAACC,IAAKQ,KAAI,CAAAV,SAAA,CACRD,cAAA,MAAIY,UAAU,mBAAkBX,SAAC,WAChC9B,GAAS6B,cAACa,IAAK,CAACC,QAAQ,SAAQb,SAAE9B,IACnC+B,eAACa,IAAI,CAACC,SAtCiB,SAEJC,GAAA,OAAAtC,EAAAmB,MAAC,KAADC,UAAA,EAoCUE,SAAA,CAC3BC,eAACa,IAAKG,MAAK,CAACC,GAAG,QAAOlB,SAAA,CACpBD,cAACe,IAAKK,MAAK,CAAAnB,SAAC,UACZD,cAACe,IAAKM,QAAO,CAACC,KAAK,QAAQC,IAAK9D,EAAU+D,UAAQ,OAEpDtB,eAACa,IAAKG,MAAK,CAACC,GAAG,WAAUlB,SAAA,CACvBD,cAACe,IAAKK,MAAK,CAAAnB,SAAC,aACZD,cAACe,IAAKM,QAAO,CAACC,KAAK,WAAWC,IAAK5D,EAAa6D,UAAQ,OAE1DxB,cAACyB,IAAM,CAACC,SAAUnD,EAASqC,UAAU,aAAaU,KAAK,SAAQrB,SAAC,cAIlED,cAAA,OAAKY,UAAU,yBAAwBX,SACrCD,cAAC2B,IAAI,CAACC,GAAG,mBAAkB3B,SAAC,0BAGhCC,eAAA,OAAKE,MAAO,CAAEyB,aAAc,KAAOjB,UAAU,oBAAmBX,SAAA,CAAC,oBAC9CD,cAAC2B,IAAI,CAACC,GAAG,UAAS3B,SAAC,mBAK9C,C","file":"static/js/7.4c47c314.chunk.js","sourcesContent":["import React, { useRef, useState, useContext } from \"react\";\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\r\nimport AuthContext from \"../Context/authContext\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\nexport default function LoginForm() {\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const { login } = useContext(AuthContext);\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n\r\n      let response = await login(\r\n        emailRef.current.value,\r\n        passwordRef.current.value\r\n      );\r\n\r\n      if (!response.ok) throw new Error(\"Bad Auth!\");\r\n      setLoading(false);\r\n      //localStorage.setItem(\"isLoggedIn\", true);\r\n    } catch (e) {\r\n      setError(\"Failed to log in\");\r\n    }\r\n\r\n    navigate(\"/\", { replace: \"true\" });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Card\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          height: \"100vh\"\r\n        }}\r\n      >\r\n        <h1 style={{ marginTop: 100, padding: 80 }}>Welcome To ExpensIO</h1>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Log In</h2>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type=\"email\" ref={emailRef} required />\r\n            </Form.Group>\r\n            <Form.Group id=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type=\"password\" ref={passwordRef} required />\r\n            </Form.Group>\r\n            <Button disabled={loading} className=\"w-100 mt-4\" type=\"submit\">\r\n              Log In\r\n            </Button>\r\n          </Form>\r\n          <div className=\"w-100 text-center mt-3\">\r\n            <Link to=\"/forgot-password\">Forgot Password?</Link>\r\n          </div>\r\n        </Card.Body>\r\n        <div style={{ marginBottom: 350 }} className=\"w-100 text-center\">\r\n          Need an account? <Link to=\"/signUp\">Sign Up</Link>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}